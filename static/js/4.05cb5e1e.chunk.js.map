{"version":3,"sources":["pages/dashboard/dashboard.tsx","containers/dashboard.tsx"],"names":["Dashboard","authButtonRef","authIconContainer","connectablelWifiList","currentWifi","isAuthIconClicked","isWifiButtonClicked","isWifiModalOpen","onAuthIconToggle","onWifiConnectClick","onWifiListToggle","onWifiModalOpen","onWifiModalToggle","passwordRef","sidenavContainer","wifiButtonRef","Container","className","fluid","Row","Col","sm","ListGroup","ListGroupItem","src","alt","ref","Tooltip","innerClassName","placement","container","autohide","isOpen","target","trigger","toggle","map","wifi","i","onClick","ssid","xs","Card","CardBody","Button","Modal","ModalHeader","ModalBody","FormGroup","Label","htmlFor","Input","type","id","innerRef","ModalFooter","color","SERVER_URL","useState","setConnectablelWifiList","setAuthIconClicked","setWifiButtonClicked","setWifiModalOpen","setCurrentWifi","useRef","document","querySelector","getConnectablelWifiList","a","onSuccess","res","data","onError","err","axios","get","post","psw","current","value"],"mappings":"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","file":"static/js/4.05cb5e1e.chunk.js","sourcesContent":["import React from 'react';\n\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Container,\n  ListGroup,\n  ListGroupItem,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Row,\n  Tooltip,\n  FormGroup,\n  Label,\n  Input\n} from 'reactstrap';\nimport { IWifi } from 'containers/dashboard';\n\ninterface DashboardProps {\n  authButtonRef: React.RefObject<HTMLDivElement>;\n  authIconContainer: HTMLElement;\n  connectablelWifiList: IWifi[];\n  currentWifi: IWifi | undefined;\n  isAuthIconClicked: boolean;\n  isWifiButtonClicked: boolean;\n  isWifiModalOpen: boolean;\n  onAuthIconToggle: () => void;\n  onWifiConnectClick: () => Promise<any>;\n  onWifiListToggle: () => Promise<void>;\n  onWifiModalOpen: (wifi: IWifi) => () => void;\n  onWifiModalToggle: () => void;\n  passwordRef: React.RefObject<HTMLInputElement>;\n  sidenavContainer: HTMLElement;\n  wifiButtonRef: React.RefObject<HTMLAnchorElement>;\n}\n\nfunction Dashboard({\n  authButtonRef,\n  authIconContainer,\n  connectablelWifiList,\n  currentWifi,\n  isAuthIconClicked,\n  isWifiButtonClicked,\n  isWifiModalOpen,\n  onAuthIconToggle,\n  onWifiConnectClick,\n  onWifiListToggle,\n  onWifiModalOpen,\n  onWifiModalToggle,\n  passwordRef,\n  sidenavContainer,\n  wifiButtonRef\n}: DashboardProps) {\n  return (\n    <Container className=\"dashboard\" fluid>\n      <Row className=\"dashboard-header\">\n        <Col>\n          <h1>Smart AI 2.0 Dashboard</h1>\n        </Col>\n      </Row>\n\n      <Row className=\"dashboard-section\">\n        <Col className=\"dashboard-sidenav\" sm=\"3\">\n          <ListGroup className=\"sidenav\">\n            <ListGroupItem className=\"sidenav-item\">\n              <img\n                className=\"sidenav-icon\"\n                src=\"/assets/img/icon--disconnect-wifi.svg\"\n                alt=\"wifi\"\n              />\n              <a className=\"sidenav-link btn-connect-wifi\" ref={wifiButtonRef}>\n                연결중\n              </a>\n            </ListGroupItem>\n            <ListGroupItem className=\"sidenav-item\">\n              <img\n                className=\"sidenav-icon\"\n                src=\"/assets/img/icon--disconnect-modi.svg\"\n                alt=\"wifi\"\n              />\n              <a className=\"sidenav-link\">MODI 연결 끊김</a>\n            </ListGroupItem>\n            <ListGroupItem className=\"sidenav-item\">\n              <img\n                className=\"sidenav-icon\"\n                src=\"/assets/img/icon--disconnect-raspberry.svg\"\n                alt=\"wifi\"\n              />\n              <a className=\"sidenav-link\">기기 연결 끊김</a>\n            </ListGroupItem>\n            <ListGroupItem className=\"sidenav-item\">\n              <img\n                className=\"sidenav-icon\"\n                src=\"/assets/img/icon--battery.svg\"\n                alt=\"wifi\"\n              />\n              <a className=\"sidenav-link\">\n                20% <small>(충전 필요)</small>\n              </a>\n            </ListGroupItem>\n            <ListGroupItem className=\"sidenav-item\">\n              <img\n                className=\"sidenav-icon\"\n                src=\"/assets/img/icon--chip.svg\"\n                alt=\"wifi\"\n              />\n              <a className=\"sidenav-link\">펌웨어 v 1.0.0</a>\n            </ListGroupItem>\n          </ListGroup>\n          <Tooltip\n            className=\"wifi-tooltip\"\n            innerClassName=\"wifi-tooltip-inner\"\n            placement=\"right-start\"\n            container={sidenavContainer}\n            autohide={false}\n            isOpen={isWifiButtonClicked}\n            target={wifiButtonRef}\n            trigger=\"click\"\n            toggle={onWifiListToggle}\n          >\n            <ListGroup className=\"wifi-list\">\n              <ListGroupItem>\n                <span>탐색중 ...</span>\n              </ListGroupItem>\n              {connectablelWifiList &&\n                connectablelWifiList.map((wifi, i) => {\n                  return (\n                    <ListGroupItem\n                      className=\"wifi-item\"\n                      onClick={onWifiModalOpen(wifi)}\n                      key={i}\n                    >\n                      <img\n                        className=\"wifi-icon\"\n                        src=\"/assets/img/icon--wifi.svg\"\n                        alt=\"wifi\"\n                      />\n                      <span>{wifi.ssid}</span>\n                    </ListGroupItem>\n                  );\n                })}\n            </ListGroup>\n          </Tooltip>\n        </Col>\n\n        <Col className=\"dashboard-contents\" sm=\"6\">\n          <Row xs=\"3\">\n            <Col>\n              <Card className=\"text-center\">\n                <CardBody className=\"card-item\">\n                  <Button className=\"card-link\">학습하기</Button>\n                </CardBody>\n              </Card>\n            </Col>\n\n            <Col>\n              <Card className=\"text-center\">\n                <CardBody className=\"card-item\">\n                  <Button className=\"card-link\">코딩하기</Button>\n                </CardBody>\n              </Card>\n            </Col>\n\n            <Col>\n              <Card className=\"text-center\">\n                <CardBody className=\"card-item\">\n                  <Button className=\"card-link\">주행하기</Button>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Col>\n\n        <Col className=\"dashboard-offbar\" sm=\"3\">\n          <div className=\"float-right\">\n            <div className=\"auth\">\n              <div className=\"auth-icon\" ref={authButtonRef}>\n                <img src=\"/assets/img/icon--user.svg\" alt=\"user\" />\n              </div>\n              홍길동\n              <div className=\"auth-signout\">\n                <img src=\"/assets/img/icon--signout.svg\" alt=\"signout\" />\n              </div>\n            </div>\n\n            <Tooltip\n              className=\"auth-tooltip\"\n              innerClassName=\"auth-tooltip-inner\"\n              placement=\"bottom\"\n              container={authIconContainer}\n              autohide={false}\n              isOpen={isAuthIconClicked}\n              target={authButtonRef}\n              trigger=\"click\"\n              toggle={onAuthIconToggle}\n            >\n              <ListGroup className=\"auth-menu\">\n                <ListGroupItem\n                  className=\"auth-menu-item\"\n                  onClick={onAuthIconToggle}\n                >\n                  사용자 변경\n                </ListGroupItem>\n                <ListGroupItem\n                  className=\"auth-menu-item\"\n                  onClick={onAuthIconToggle}\n                >\n                  사용자 삭제\n                </ListGroupItem>\n              </ListGroup>\n            </Tooltip>\n\n            <ListGroup className=\"offbar\">\n              <ListGroupItem className=\"offbar-item\">\n                <img\n                  className=\"offbar-icon\"\n                  src=\"/assets/img/icon--paper.svg\"\n                  alt=\"wifi\"\n                />\n                <a className=\"offbar-link\">사용자 메뉴얼</a>\n              </ListGroupItem>\n              <ListGroupItem className=\"offbar-item\">\n                <img\n                  className=\"offbar-icon\"\n                  src=\"/assets/img/icon--settings.svg\"\n                  alt=\"wifi\"\n                />\n                <a className=\"offbar-link\">설정</a>\n              </ListGroupItem>\n              <ListGroupItem className=\"offbar-item\">\n                <img\n                  className=\"offbar-icon\"\n                  src=\"/assets/img/icon--power.svg\"\n                  alt=\"wifi\"\n                />\n                <a className=\"offbar-link\">시스템 종료</a>\n              </ListGroupItem>\n            </ListGroup>\n          </div>\n        </Col>\n      </Row>\n      <Modal\n        isOpen={isWifiModalOpen}\n        toggle={onWifiModalToggle}\n        className=\"wifi-modal\"\n      >\n        <ModalHeader toggle={onWifiModalToggle}>\n          <img\n            className=\"wifi-icon\"\n            src=\"/assets/img/icon--wifi.svg\"\n            alt=\"wifi\"\n          />\n          <span>&apos;{currentWifi?.ssid}&apos;</span>\n        </ModalHeader>\n        <ModalBody>\n          <div>이 Wi-Fi 네트워크는 비밀번호가 필요합니다.</div>\n          <FormGroup>\n            <Label htmlFor=\"password\">비밀번호</Label>\n            <Input type=\"password\" id=\"password\" innerRef={passwordRef} />\n          </FormGroup>\n          <FormGroup className=\"checkbox-input\">\n            <Input type=\"checkbox\" id=\"show-password\" />\n            <Label htmlFor=\"show-password\">비밀번호 표시</Label>\n          </FormGroup>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={onWifiModalToggle}>\n            취소\n          </Button>\n          <Button color=\"secondary\" onClick={onWifiConnectClick}>\n            연결\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </Container>\n  );\n}\n\nexport default Dashboard;\n","import React, { useRef, useState } from 'react';\nimport axios, { AxiosResponse } from 'axios';\n\nimport DashBoardPage from 'pages/dashboard/dashboard';\n\nconst SERVER_URL = 'http://169.254.190.215:5000';\n\nexport interface IWifi {\n  ssid: string;\n  frequency: string;\n  intensity: string;\n  pskRequirement: string;\n}\n\nfunction Dashboard() {\n  const [connectablelWifiList, setConnectablelWifiList] = useState<\n    Array<IWifi>\n  >([]);\n  const [isAuthIconClicked, setAuthIconClicked] = useState<boolean>(false);\n  const [isWifiButtonClicked, setWifiButtonClicked] = useState<boolean>(false);\n  const [isWifiModalOpen, setWifiModalOpen] = useState<boolean>(false);\n  const [currentWifi, setCurrentWifi] = useState<IWifi>();\n\n  const wifiButtonRef = useRef<HTMLAnchorElement>(null);\n  const authButtonRef = useRef<HTMLDivElement>(null);\n  const passwordRef = useRef<HTMLInputElement>(null);\n\n  const sidenavContainer = document.querySelector(\n    '.dashboard-sidenav'\n  ) as HTMLElement;\n\n  const authIconContainer = document.querySelector('.auth-icon') as HTMLElement;\n\n  /**\n   * Auth\n   */\n  const onAuthIconToggle = () => {\n    setAuthIconClicked(!isAuthIconClicked);\n  };\n\n  const getConnectablelWifiList = async () => {\n    const onSuccess = (res: AxiosResponse<any>) => res.data;\n    const onError = (err: any) => err;\n    try {\n      const res = await axios.get(`${SERVER_URL}/wifi/list`);\n      return onSuccess(res);\n    } catch (err) {\n      return onError(err);\n    }\n  };\n\n  const onWifiConnectClick = async () => {\n    const onSuccess = (res: AxiosResponse<any>) => res.data;\n    const onError = (err: any) => err;\n\n    try {\n      const res = await axios.post(`${SERVER_URL}/wifi/connect`, {\n        ssid: currentWifi!.ssid,\n        psw:\n          passwordRef && passwordRef.current ? passwordRef.current.value : null\n      });\n      return onSuccess(res);\n    } catch (err) {\n      return onError(err);\n    }\n  };\n\n  const onWifiListToggle = async () => {\n    const connectablelWifiList = await getConnectablelWifiList();\n    setConnectablelWifiList(connectablelWifiList);\n    setWifiButtonClicked(!isWifiButtonClicked);\n  };\n\n  const onWifiModalToggle = () => {\n    setWifiModalOpen(!isWifiModalOpen);\n  };\n\n  const onWifiModalOpen = (wifi: IWifi) => () => {\n    setCurrentWifi(wifi);\n    onWifiModalToggle();\n  };\n\n  return (\n    <DashBoardPage\n      authButtonRef={authButtonRef}\n      authIconContainer={authIconContainer}\n      connectablelWifiList={connectablelWifiList}\n      currentWifi={currentWifi}\n      isAuthIconClicked={isAuthIconClicked}\n      isWifiButtonClicked={isWifiButtonClicked}\n      isWifiModalOpen={isWifiModalOpen}\n      onAuthIconToggle={onAuthIconToggle}\n      onWifiConnectClick={onWifiConnectClick}\n      onWifiListToggle={onWifiListToggle}\n      onWifiModalOpen={onWifiModalOpen}\n      onWifiModalToggle={onWifiModalToggle}\n      passwordRef={passwordRef}\n      sidenavContainer={sidenavContainer}\n      wifiButtonRef={wifiButtonRef}\n    />\n  );\n}\n\nexport default Dashboard;\n"],"sourceRoot":""}